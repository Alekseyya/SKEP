@using MainApp.HtmlControls
@model Core.Models.ProjectStatusRecord

@{
    ViewBag.Title = "Создать";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Добавление отчета по статусу проекта: @Model.Project.ShortName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.StatusPeriodName)

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectStatusBeginDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ProjectStatusBeginDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectStatusBeginDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectStatusEndDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ProjectStatusEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectStatusEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.ProjectID)
                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlannedReleaseInfo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PlannedReleaseInfo, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.PlannedReleaseInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExternalDependenciesInfo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ExternalDependenciesInfo, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.ExternalDependenciesInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusText, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StatusText, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.StatusText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProblemsText, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ProblemsText, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.ProblemsText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProposedSolutionText, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ProposedSolutionText, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.ProposedSolutionText, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.RPCSAutocompleteEnumDropDownList(model => model.RiskIndicatorFlag, "Уровень риска", ViewBag.ArrayStatus as SelectList)*@
        @*<select asp-for="RiskIndicatorFlag" asp-items="@ViewBag.ArrayStatus"></select>*@
        @Html.RPCSAutocompleteEnumDropDownList(model => model.RiskIndicatorFlag, ViewBag.ArrayStatus as SelectList)

        <div class="form-group">
            @Html.LabelFor(model => model.RiskIndicatorComments, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RiskIndicatorComments, new { htmlAttributes = new { @class = "form-control", @rows = "15" } })
                @Html.ValidationMessageFor(model => model.RiskIndicatorComments, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SupervisorComments, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SupervisorComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupervisorComments, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("К списку", "Index")
</div>