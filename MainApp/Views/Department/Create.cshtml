@using MainApp.HtmlControls
@using Core.BL.Interfaces
@using Core.Models.RBAC
@model Core.Models.Department
@inject IPermissionValidatorService PermissionValidatorService

@{
    ViewBag.Title = "Создать карточку";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Создать карточку</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortTitle, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ShortTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentDepartmentID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.ParentDepartmentID)
                @Html.ValidationMessageFor(model => model.ParentDepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganisationID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.OrganisationID)
                @Html.ValidationMessageFor(model => model.OrganisationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentManagerID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.DepartmentManagerID)
                @Html.ValidationMessageFor(model => model.DepartmentManagerID, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (PermissionValidatorService.HasAccess(@User, Operation.AdminFullAccess))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentManagerAssistantID, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.RPCSAutocompleteDropDownListClear(model => model.DepartmentManagerAssistantID)
                    @Html.ValidationMessageFor(model => model.DepartmentManagerAssistantID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentPAID, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.RPCSAutocompleteDropDownListClear(model => model.DepartmentPAID)
                    @Html.ValidationMessageFor(model => model.DepartmentPAID, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.IsFinancialCentre, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsFinancialCentre)
                @Html.ValidationMessageFor(model => model.IsFinancialCentre, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.IsAutonomous, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsAutonomous)
                @Html.ValidationMessageFor(model => model.IsAutonomous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (PermissionValidatorService.HasAccess(@User, Operation.AdminFullAccess))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UsePayrollQuarterValue, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UsePayrollQuarterValue)
                    @Html.ValidationMessageFor(model => model.UsePayrollQuarterValue, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsePayrollHalfYearValue, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UsePayrollHalfYearValue)
                    @Html.ValidationMessageFor(model => model.UsePayrollHalfYearValue, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsePayrollYearValue, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UsePayrollYearValue)
                    @Html.ValidationMessageFor(model => model.UsePayrollYearValue, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("К списку", "Index")
    </div>

@section Scripts {
    @*//@Scripts.Render("~/bundles/jqueryval")*@
}
