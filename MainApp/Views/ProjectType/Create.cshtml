@using Core.Models
@using MainApp.HtmlControls
@model Core.Models.ProjectType

@{
    ViewBag.Title = "Создать карточку";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Карточка типа проекта - создание</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessTripCostSubItemID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.BusinessTripCostSubItemID)
                @Html.ValidationMessageFor(model => model.BusinessTripCostSubItemID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TSApproveMode, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <select asp-for="TSApproveMode" asp-items="@Html.GetEnumSelectList(typeof(ProjectTypeTSApproveMode))" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.TSApproveMode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ActivityType, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <select asp-for="ActivityType" asp-items="@Html.GetEnumSelectList(typeof(ProjectTypeActivityType))" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.ActivityType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Utilization, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Utilization)
                @Html.ValidationMessageFor(model => model.Utilization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("К списку", "Index")
</div>

