@using Microsoft.AspNetCore.Mvc.Rendering
@using Core.Models
@using MainApp.HtmlControls
@model Core.Models.EmployeeCategory

@{
    ViewBag.Title = "Создать запись";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Создать запись о категории / % ставки сотрудника</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.RPCSAutocompleteDropDownListClear(model => model.EmployeeID)
                @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryDateBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CategoryDateBegin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryDateBegin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryDateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CategoryDateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryDateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <select asp-for="CategoryType" asp-items="Html.GetEnumSelectList<EmployeeCategoryType>()" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.CategoryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentRatio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("EmploymentRatio", new SelectList(EmployeeCategory.GetEmploymentRatioValues().Select(v => new { ID = v.Item1, Value = v.Item2 }), "ID", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmploymentRatio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @if (Context.Request.Query["employeeid"] == "")
    {
        @Html.ActionLink("К списку", "Index")
    }
    else
    {
        @Html.ActionLink("К карточке сотрудника", "Details", "Employee", null, null, "employeecategory", new { id = Context.Request.Query["employeeid"] }, null)
    }
</div>

@section Scripts {
    @*//@Scripts.Render("~/bundles/jqueryval")*@
}
